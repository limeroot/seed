#!/bin/sh

# Original script by Andreas Teuchert <ant+dl@hsg-kl.de>
# Modified by Frédéric Boiteux <fboiteux@calistel.com>

PREREQ="blacklist udev"

prereqs()
{
	echo "$PREREQ"
}

case $1 in
# get pre-requisites
prereqs)
	prereqs
	exit 0
	;;
esac

# Boot type in initramfs's config
bootconf=$(egrep '^BOOT=' /conf/initramfs.conf | tail -1)

# can be superseded by command line (used by Debian-Live's netboot for example)
for ARGUMENT in $(cat /proc/cmdline); do
	case "${ARGUMENT}" in
		netboot=*)
			NETBOOT="${ARGUMENT#netboot=}"
			;;
	esac
done

if [ "$bootconf" != "BOOT=nfs" ] &&
   [ "$NETBOOT" = "" ] &&
   [ "$FETCH" = "" ] &&
   [ "$FTPFS" = "" ] &&
   [ "$HTTPFS" = "" ]
then
    # Not a net boot : nothing to do
    exit 0
fi

# we want to do some basic IP
modprobe -q af_packet

# Available Ethernet interfaces ?
l_interfaces=""
echo "Waiting for ethernet card(s) up... If this fails, maybe the ethernet card is not supported by the kernel `uname -r`?"
while [ -z "$l_interfaces" ]; do
  l_interfaces="$(cd /sys/class/net/ && ls -d eth* 2>/dev/null)"
done

if [ $(echo $l_interfaces | wc -w) -lt 2 ]; then
	# only one interface : no choice
	echo "DEVICE=$l_interfaces" >> /conf/param.conf
	exit 0
fi

# If user force to use specific device, write it
for ARGUMENT in $(cat /proc/cmdline); do
    case "${ARGUMENT}" in
        live-netdev=*)
        NETDEV="${ARGUMENT#live-netdev=}"
        echo "DEVICE=$NETDEV" >> /conf/param.conf
	echo "Found live-netdev parameter in /proc/cmdline. Force to use network device $NETDEV."
        exit 0
        ;;
    esac
done

while true; do
	echo -n "Looking for a connected Ethernet interface ..."

	for interface in $l_interfaces; do
		# ATTR{carrier} is not set if this is not done
		echo -n " $interface ?"
		ipconfig -c none -d $interface -t 1 >/dev/null 2>&1
	done

	echo ''

	for step in 1 2 3 4 5; do
		for interface in $l_interfaces; do
			carrier=$(cat /sys/class/net/$interface/carrier \
				2>/dev/null)
			# link detected
			if [ "$carrier" = 1 ]; then
				echo " found $interface."
				# inform initrd's init script :
				echo "DEVICE=$interface" >> /conf/param.conf
				exit 0
			fi
		done
		# wait a bit
		sleep 1
	done
done
